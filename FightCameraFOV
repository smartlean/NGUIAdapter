using UnityEngine;
using System.Collections;

[ExecuteInEditMode]
public class FightCameraFOV : MonoBehaviour
{
    public float CanvasWidth = 640;
    public float CanvasHeight = 960;

    public float addFov;
    private Camera m_Camera;
    public float StartFOV;
    public float ResizeFOV;
    // Use this for initialization
    private float StartX;
    private float StartY;

    private float mFixedScreenWidth;
    private float mFixedScreenHeight; 

    void Start()
    {
        m_Camera = this.GetComponent<Camera>();
        //StartFOV = m_Camera.orthographicSize;
    	if (gameObject.GetComponent<UICamera> () != null) 
	{
	     StartFOV = 1;
	}

	addFov = -0.02f;
        AutoResize();
    }

    void LateUpdate()
    {
        AutoResize();
    }

    void AutoResize()
    {
    	if (m_Camera == null) 
	{
	    m_Camera = this.GetComponent<Camera>();	
	}

        float w = (float)Screen.width;
        float h = (float)Screen.height;

        float screenRatio = w / h;
        float strangeFactor = ((h - w * 1.5f) / h);
        if (screenRatio < 2f / 3f)
        {
            // Fit horizontally
	    float scale = w / CanvasWidth;
            ResizeFOV = strangeFactor;
            m_Camera.orthographicSize = (1 + strangeFactor) * StartFOV-addFov;

        }
        else
        {
            ResizeFOV = StartFOV;
	    m_Camera.orthographicSize = StartFOV;//-addFov;
        }

	mFixedScreenHeight = m_Camera.orthographicSize * CanvasHeight;
	mFixedScreenWidth = screenRatio * mFixedScreenHeight;

	//LogManager.Log(LogManager.eLOGTYPE.LOGTYPE_ERROR, "screen size : " + Screen.width + "*" + Screen.height);
	//LogManager.Log(LogManager.eLOGTYPE.LOGTYPE_ERROR, "fixed screen size : " + mFixedScreenWidth + "*" + mFixedScreenHeight);
    }

	public float FixedScreenHeight 
	{
		get 
		{
			AutoResize();
			return mFixedScreenHeight;
		}
	}

	public float FixedScreenWidth
	{
		get 
		{
			AutoResize();
			return mFixedScreenWidth;
		}
	}

	public float PaddingV 
	{
		get 
		{
			AutoResize();
			return (mFixedScreenHeight - (float)CanvasHeight) * 0.5f;
		}
	}

	public float OrthographicSize
	{
		get 
		{
			AutoResize();
			return m_Camera.orthographicSize;
		}
	}
}
